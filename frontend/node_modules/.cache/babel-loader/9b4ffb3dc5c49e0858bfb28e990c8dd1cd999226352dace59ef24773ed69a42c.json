{"ast":null,"code":"var _jsxFileName = \"/home/bekzat/Documents/Programming/task-management/frontend/src/components/Task/TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { TaskService } from '../../services/taskService';\nimport TaskForm from './TaskForm'; // Assuming you have TaskForm for task creation/editing\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [editingTask, setEditingTask] = useState(null); // Track task being edited\n\n  // Fetch tasks on component mount\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const fetchedTasks = await TaskService.listTasks();\n      console.log('Fetched tasks:', fetchedTasks); // Debug: Ensure tasks are fetched\n      setTasks(fetchedTasks);\n    } catch (error) {\n      console.error('Failed to load tasks:', error);\n    }\n  };\n  const handleDelete = async id => {\n    console.log(`Deleting task with ID: ${id}`); // Debug: Ensure ID is passed correctly\n    try {\n      await TaskService.deleteTask(id);\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== id)); // Update state\n    } catch (error) {\n      console.error('Failed to delete task:', error);\n    }\n  };\n  const handleEdit = task => {\n    console.log('Editing task:', task); // Debug: Ensure task data is correct\n    setEditingTask(task); // Set task to be edited\n  };\n  const handleUpdate = async updatedTask => {\n    console.log('Updating task:', updatedTask); // Debug: Ensure update data is correct\n    try {\n      await TaskService.updateTask(updatedTask.id, updatedTask);\n      setTasks(prevTasks => prevTasks.map(task => task.id === updatedTask.id ? updatedTask : task)); // Update task in state\n      setEditingTask(null); // Clear editing state\n    } catch (error) {\n      console.error('Failed to update task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onSuccess: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), \" \", editingTask && /*#__PURE__*/_jsxDEV(TaskForm, {\n      task: editingTask,\n      onSuccess: fetchTasks,\n      onCancel: () => setEditingTask(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Task ID: \", task.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEdit(task),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(task.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"nwiSLkn6Y0JvLhs83lscW/YeAV0=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","TaskService","TaskForm","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","editingTask","setEditingTask","fetchTasks","fetchedTasks","listTasks","console","log","error","handleDelete","id","deleteTask","prevTasks","filter","task","handleEdit","handleUpdate","updatedTask","updateTask","map","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onCancel","title","description","onClick","_c","$RefreshReg$"],"sources":["/home/bekzat/Documents/Programming/task-management/frontend/src/components/Task/TaskList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Task } from '../../types/task';\nimport { TaskService } from '../../services/taskService';\nimport TaskForm from './TaskForm'; // Assuming you have TaskForm for task creation/editing\n\nconst TaskList: React.FC = () => {\n    const [tasks, setTasks] = useState<Task[]>([]);\n    const [editingTask, setEditingTask] = useState<Task | null>(null); // Track task being edited\n\n    // Fetch tasks on component mount\n    useEffect(() => {\n        fetchTasks();\n    }, []);\n\n    const fetchTasks = async () => {\n        try {\n            const fetchedTasks = await TaskService.listTasks();\n            console.log('Fetched tasks:', fetchedTasks); // Debug: Ensure tasks are fetched\n            setTasks(fetchedTasks);\n        } catch (error) {\n            console.error('Failed to load tasks:', error);\n        }\n    };\n\n    const handleDelete = async (id: number) => {\n        console.log(`Deleting task with ID: ${id}`); // Debug: Ensure ID is passed correctly\n        try {\n            await TaskService.deleteTask(id);\n            setTasks((prevTasks) => prevTasks.filter((task) => task.id !== id)); // Update state\n        } catch (error) {\n            console.error('Failed to delete task:', error);\n        }\n    };\n\n    const handleEdit = (task: Task) => {\n        console.log('Editing task:', task); // Debug: Ensure task data is correct\n        setEditingTask(task); // Set task to be edited\n    };\n\n    const handleUpdate = async (updatedTask: Task) => {\n        console.log('Updating task:', updatedTask); // Debug: Ensure update data is correct\n        try {\n            await TaskService.updateTask(updatedTask.id, updatedTask);\n            setTasks((prevTasks) =>\n                prevTasks.map((task) => (task.id === updatedTask.id ? updatedTask : task))\n            ); // Update task in state\n            setEditingTask(null); // Clear editing state\n        } catch (error) {\n            console.error('Failed to update task:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Task List</h1>\n            <TaskForm onSuccess={fetchTasks} /> {/* Create new task */}\n\n            {editingTask && (\n                <TaskForm\n                    task={editingTask}\n                    onSuccess={fetchTasks}\n                    onCancel={() => setEditingTask(null)}\n                />\n            )}\n\n            {tasks.map((task) => (\n                <div key={task.id}>\n                    <h3>{task.title}</h3>\n                    <p>Task ID: {task.id}</p>\n                    <p>{task.description}</p>\n                    <button onClick={() => handleEdit(task)}>Edit</button>\n                    <button onClick={() => handleDelete(task.id)}>Delete</button>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}