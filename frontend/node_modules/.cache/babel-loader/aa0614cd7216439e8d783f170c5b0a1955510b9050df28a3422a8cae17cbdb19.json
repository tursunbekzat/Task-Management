{"ast":null,"code":"var _jsxFileName = \"/home/bekzat/Documents/Programming/task-management/frontend/src/components/Task/TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { TaskService } from '../../services/taskService';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState(null);\n  const [editingTask, setEditingTask] = useState(null);\n  const fetchTasks = async () => {\n    try {\n      const data = await TaskService.listTasks();\n      console.log('Fetched tasks:', data); // Debugging the task data\n      setTasks(data);\n    } catch (err) {\n      setError('Failed to load tasks');\n      console.error('Error fetching tasks:', err);\n    }\n  };\n  const handleDelete = async ID => {\n    console.log(`Deleting task with ID: ${ID}`); // Debug: Log the ID\n    try {\n      await TaskService.deleteTask(ID);\n      setTasks(prevTasks => prevTasks.filter(task => task.ID !== ID));\n    } catch (error) {\n      console.error('Failed to delete task:', error);\n    }\n  };\n  const handleEdit = task => {\n    console.log('Editing task:', task.ID); // Debugging the task to be edited\n    setEditingTask(task);\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n    if (!editingTask) return;\n    try {\n      const updatedTask = {\n        title: editingTask.title,\n        description: editingTask.description,\n        priority: editingTask.priority,\n        dueDate: editingTask.dueDate,\n        status: editingTask.status\n      };\n      await TaskService.updateTask(editingTask.ID, updatedTask);\n      setEditingTask(null); // Close the edit form\n      fetchTasks(); // Reload tasks\n    } catch (error) {\n      console.error('Failed to update task:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onSuccess: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Task ID: \", task.ID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEdit(task),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(task.ID),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, task.ID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)), editingTask && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdate,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editingTask.title,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          title: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editingTask.description,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditingTask(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"XQugFcX+Y1MHbuZj0/W2tVqmOiU=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","TaskService","TaskForm","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","error","setError","editingTask","setEditingTask","fetchTasks","data","listTasks","console","log","err","handleDelete","ID","deleteTask","prevTasks","filter","task","handleEdit","handleUpdate","e","preventDefault","updatedTask","title","description","priority","dueDate","status","updateTask","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","map","onClick","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/home/bekzat/Documents/Programming/task-management/frontend/src/components/Task/TaskList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Task, TaskUpdate } from '../../types/task';\nimport { TaskService } from '../../services/taskService';\nimport TaskForm from './TaskForm';\n\nconst TaskList: React.FC = () => {\n    const [tasks, setTasks] = useState<Task[]>([]);\n    const [error, setError] = useState<string | null>(null);\n    const [editingTask, setEditingTask] = useState<Task | null>(null);\n\n    const fetchTasks = async () => {\n        try {\n            const data = await TaskService.listTasks();\n            console.log('Fetched tasks:', data);  // Debugging the task data\n            setTasks(data);\n        } catch (err) {\n            setError('Failed to load tasks');\n            console.error('Error fetching tasks:', err);\n        }\n    };\n\n    const handleDelete = async (ID: number) => {\n        console.log(`Deleting task with ID: ${ID}`);  // Debug: Log the ID\n        try {\n            await TaskService.deleteTask(ID);\n            setTasks((prevTasks) => prevTasks.filter((task) => task.ID !== ID));\n        } catch (error) {\n            console.error('Failed to delete task:', error);\n        }\n    };\n\n    const handleEdit = (task: Task) => {\n        console.log('Editing task:', task.ID);  // Debugging the task to be edited\n        setEditingTask(task);\n    };\n\n    const handleUpdate = async (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!editingTask) return;\n\n        try {\n            const updatedTask: TaskUpdate = {\n                title: editingTask.title,\n                description: editingTask.description,\n                priority: editingTask.priority,\n                dueDate: editingTask.dueDate,\n                status: editingTask.status,\n            };\n\n            await TaskService.updateTask(editingTask.ID, updatedTask);\n            setEditingTask(null);  // Close the edit form\n            fetchTasks();  // Reload tasks\n        } catch (error) {\n            console.error('Failed to update task:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchTasks();\n    }, []);\n\n    if (error) return <div>{error}</div>;\n\n    return (\n        <div>\n            <h1>Task List</h1>\n            <TaskForm onSuccess={fetchTasks} />\n            {tasks.map((task) => (\n                <div key={task.ID}>\n                    <h3>{task.title}</h3>\n                    <p>Task ID: {task.ID}</p>\n                    <p>{task.description}</p>\n                    <button onClick={() => handleEdit(task)}>Edit</button>\n                    <button onClick={() => handleDelete(task.ID)}>Delete</button>\n                </div>\n            ))}\n\n            {editingTask && (\n                <form onSubmit={handleUpdate}>\n                    <input\n                        type=\"text\"\n                        value={editingTask.title}\n                        onChange={(e) =>\n                            setEditingTask({ ...editingTask, title: e.target.value })\n                        }\n                        required\n                    />\n                    <textarea\n                        value={editingTask.description}\n                        onChange={(e) =>\n                            setEditingTask({ ...editingTask, description: e.target.value })\n                        }\n                    />\n                    <button type=\"submit\">Save</button>\n                    <button onClick={() => setEditingTask(null)}>Cancel</button>\n                </form>\n            )}\n        </div>\n    );\n};\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}