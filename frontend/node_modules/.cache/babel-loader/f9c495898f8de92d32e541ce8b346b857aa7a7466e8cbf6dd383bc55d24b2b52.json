{"ast":null,"code":"var _jsxFileName = \"/home/bekzat/Documents/Programming/task-management/frontend/src/components/Task/TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { TaskService } from '../../services/taskService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const data = await TaskService.listTasks();\n        setTasks(data);\n      } catch (err) {\n        setError('Failed to load tasks');\n        console.error('Error fetching tasks:', err.response || err.message);\n      }\n    };\n    fetchTasks();\n  }, []);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"Msao62+6XOI4WpnEzOQWjX5Qfr8=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","TaskService","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","error","setError","fetchTasks","data","listTasks","err","console","response","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","title","description","id","_c","$RefreshReg$"],"sources":["/home/bekzat/Documents/Programming/task-management/frontend/src/components/Task/TaskList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Task } from '../../types/task';\nimport { TaskService } from '../../services/taskService';\n\nconst TaskList: React.FC = () => {\n    const [tasks, setTasks] = useState<Task[]>([]);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        const fetchTasks = async () => {\n            try {\n                const data = await TaskService.listTasks();\n                setTasks(data);\n            } catch (err: any) {\n                setError('Failed to load tasks');\n                console.error('Error fetching tasks:', err.response || err.message);\n            }\n        };\n\n        fetchTasks();\n    }, []);\n\n    if (error) return <div>{error}</div>;\n\n    return (\n        <div>\n            <h1>Task List</h1>\n            {tasks.map((task) => (\n                <div key={task.id}>\n                    <h3>{task.title}</h3>\n                    <p>{task.description}</p>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,SAASC,WAAW,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAgB,IAAI,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACZ,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMV,WAAW,CAACW,SAAS,CAAC,CAAC;QAC1CL,QAAQ,CAACI,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,GAAQ,EAAE;QACfJ,QAAQ,CAAC,sBAAsB,CAAC;QAChCK,OAAO,CAACN,KAAK,CAAC,uBAAuB,EAAEK,GAAG,CAACE,QAAQ,IAAIF,GAAG,CAACG,OAAO,CAAC;MACvE;IACJ,CAAC;IAEDN,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,KAAK,EAAE,oBAAOL,OAAA;IAAAc,QAAA,EAAMT;EAAK;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEpC,oBACIlB,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBf,KAAK,CAACgB,GAAG,CAAEC,IAAI,iBACZpB,OAAA;MAAAc,QAAA,gBACId,OAAA;QAAAc,QAAA,EAAKM,IAAI,CAACC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBlB,OAAA;QAAAc,QAAA,EAAIM,IAAI,CAACE;MAAW;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFnBE,IAAI,CAACG,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAChB,EAAA,CA/BID,QAAkB;AAAAuB,EAAA,GAAlBvB,QAAkB;AAiCxB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}