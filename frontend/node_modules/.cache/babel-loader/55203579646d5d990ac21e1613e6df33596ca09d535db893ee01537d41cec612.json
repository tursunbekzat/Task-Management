{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL;\nexport class AuthService {\n  static async login(credentials) {\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, credentials);\n      const token = response.data.token;\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  }\n  static async register(userData) {\n    await axios.post(`${API_URL}/auth/register`, userData);\n  }\n  static logout() {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n  }\n  static isAuthenticated() {\n    return !!localStorage.getItem('token');\n  }\n}","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","AuthService","login","credentials","response","post","token","data","localStorage","setItem","defaults","headers","common","error","console","register","userData","logout","removeItem","isAuthenticated","getItem"],"sources":["/home/bekzat/Documents/Programming/task-management/frontend/src/services/authService.ts"],"sourcesContent":["import axios from 'axios';\nimport { UserLogin, UserRegister } from '../types/user';\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nexport class AuthService {\n    static async login(credentials: { email: string; password: string }): Promise<void> {\n        try {\n            const response = await axios.post(`${API_URL}/auth/login`, credentials);\n            const token = response.data.token;\n            localStorage.setItem('token', token);\n            axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        } catch (error) {\n            console.error('Login failed:', error);\n            throw error;\n        }\n    }\n\n    static async register(userData: UserRegister): Promise<void> {\n        await axios.post(`${API_URL}/auth/register`, userData);\n    }\n\n    static logout(): void {\n        localStorage.removeItem('token');\n        delete axios.defaults.headers.common['Authorization'];\n    }\n\n    static isAuthenticated(): boolean {\n        return !!localStorage.getItem('token');\n    }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE7C,OAAO,MAAMC,WAAW,CAAC;EACrB,aAAaC,KAAKA,CAACC,WAAgD,EAAiB;IAChF,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,aAAa,EAAEM,WAAW,CAAC;MACvE,MAAMG,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACD,KAAK;MACjCE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;MACpCV,KAAK,CAACc,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUN,KAAK,EAAE;IACtE,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,MAAMA,KAAK;IACf;EACJ;EAEA,aAAaE,QAAQA,CAACC,QAAsB,EAAiB;IACzD,MAAMpB,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,gBAAgB,EAAEmB,QAAQ,CAAC;EAC1D;EAEA,OAAOC,MAAMA,CAAA,EAAS;IAClBT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChC,OAAOtB,KAAK,CAACc,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;EACzD;EAEA,OAAOO,eAAeA,CAAA,EAAY;IAC9B,OAAO,CAAC,CAACX,YAAY,CAACY,OAAO,CAAC,OAAO,CAAC;EAC1C;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}